import os
from flask import Flask
from Swagger_config.swagger_configuration import configure_swagger, serve_swagger_json, SWAGGER_URL
from service_api.read_input_file import read_input_file
from service_api.user_approval_files import approve_file_schema_
from service_api.clean_file_schema import clean_file_Schema


app = Flask(__name__)
#CORS(app)
# Implementing and giving the instance of configure_swagger method from swagger_configuration file
# Configure Swagger UI and get the Swagger blueprint
swaggerui_blueprint = configure_swagger()
# Registering the Swagger UI blueprint with the Flask app
app.register_blueprint(swaggerui_blueprint, url_prefix=SWAGGER_URL)

# This endpoint serves the API definition in JSON format.
# It retrieves the JSON content generated by Swagger.
@app.route('/swagger.json')
def swagger():
    # Serve the JSON content generated by Swagger
    return serve_swagger_json()

# Set the upload folder for input files
UPLOAD_FOLDER = 'uploads'
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER

# Ensure the upload directory exists
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

# Define a route for uploading input files
@app.route('/readinputfile', methods=['POST'])
def read_input_files():
    return read_input_file(app)

# Define a route for uploading input files
@app.route('/approvefileschema', methods=['POST'])
def approve_file_schema():
    return approve_file_schema_()


@app.route('/heartbeat', methods=['GET','POST'])
def heartbeat():
    return "API is working!"

@app.route('/cleanfileschema', methods=['GET','POST'])
def clean_file_schema():
    return clean_file_Schema()


if __name__ == "__main__":
    app.run(host="0.0.0.0", debug=True, port=8000)

    

